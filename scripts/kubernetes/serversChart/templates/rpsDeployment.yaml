#/*********************************************************************
# Copyright (c) Intel Corporation 2020
# SPDX-License-Identifier: Apache-2.0
#**********************************************************************/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rps
spec:
  replicas: {{ .Values.rps.replicaCount }}
  selector:
    matchLabels:
      app: rps
  template:
    metadata:
      labels:
        app: rps
    spec:
      imagePullSecrets:
        - name: {{ .Values.images.pullSecret }}
      initContainers:
      - name: check-db-ready
        image: {{ .Values.images.postgresdb }}
        command: ['sh', '-c', 
          'until pg_isready -h db -p 5432; 
          do echo waiting for database; sleep 2; done;']
      containers:
      - name: rps
        image: {{ .Values.images.rps }}
        command: ['/bin/bash', '-c', 'node ./dist/Index.js']
        env:          
          - name: "RPS_LOG_LEVEL"
            value: "{{ .Values.rps.logLevel }}"
          - name: "RPS_NODE_ENV"
            value: "{{ .Values.rps.nodeEnv }}"
          - name: "RPS_WEBSOCKETTLS"
            value: "{{ .Values.rps.webSocketTLS }}"
          - name: "RPS_USE_RAW_CERTS"
            value: "{{ .Values.rps.useRawCerts }}"
          - name: "RPS_WEB_TLS_CERT"
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mpsSecretStoreNames.certs }}
                key: {{ .Values.mps.mpscertpublic }}
          - name: "RPS_WEB_TLS_CERT_KEY"
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mpsSecretStoreNames.certs }}
                key: {{ .Values.mps.mpscertkey }}
          - name: "RPS_ROOT_CA_CERT"
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mpsSecretStoreNames.certs }}
                key: {{ .Values.mps.mpscertca }}
          - name: "RPS_VAULT_ADDRESS"
            value : "{{ .Values.rps.vaultAddr }}"
          - name: RPS_VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rpsSecretStoreNames.vault }}
                key: {{ .Values.rps.vaultkey }}
          - name: "RPS_SECRETS_PATH"
            value: "{{ .Values.rps.secretsPath }}"
          - name: "RPS_MPS_SERVER"
            value : "https://mps:{{ .Values.mps.webPort }}"
          - name: "RPS_CONNECTION_STRING"
            value: "postgresql://{{ .Values.backenddb.dbUser }}:{{ .Values.backenddb.dbPassword }}@{{ .Values.rps.dbHost }}:{{ .Values.rps.dbPort }}/rpsdb"
          - name: "RPS_DELAY_TIMER"
            value: "{{ .Values.rps.rpsDelayTimer }}"
        ports:
        - containerPort: {{ .Values.rps.rpswsPort }}
          name: rps
        - containerPort: {{ .Values.rps.rpswebPort }}
          name: rpsweb
