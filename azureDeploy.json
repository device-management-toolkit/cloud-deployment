{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",
      "defaultValue": "docker.io",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the root token to use for Vault in DEV mode"
      }
    },
    "rpsImageName": {
      "defaultValue": "intel/oact-rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "intel/oact-mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "intel/oact-webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminUsername": {
      "type": "securestring",
      "defaultValue": "postgresadmin",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminPassword": {
      "type": "securestring",
      "defaultValue": "admin123",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "tokenExpiration": {
      "defaultValue": "1440",
      "type": "string",
      "metadata": {
        "description": "Specifies the duration (in minutes) that a token will be valid for"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "RPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/rpsdb')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_JWT_EXPIRATION",
                  "value": "[parameters('tokenExpiration')]"
                },
                {
                  "name": "MPS_JWT_SECRET",
                  "value": "supersecret"
                },
                {
                  "name": "MPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "MPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/mpsdb')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/mps')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/rps')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "hashicorp/vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "kong",
            "properties": {
              "image": "kong:2.3",
              "ports": [
                {
                  "port": 8443
                }
              ],
              "command": [
                "kong",
                "start",
                "--vv"
              ],
              "environmentVariables": [
                {
                  "name": "KONG_DATABASE",
                  "value": "off"
                },
                {
                  "name": "KONG_CASSANDRA_CONTACT_POINTS",
                  "value": "kong-database"
                },
                {
                  "name": "KONG_ADMIN_LISTEN",
                  "value": "0.0.0.0:8001"
                },
                {
                  "name": "KONG_ADMIN_LISTEN_SSL",
                  "value": "0.0.0.0:8444"
                },
                {
                  "name": "KONG_NGINX_DAEMON",
                  "value": "off"
                },
                {
                  "name": "KONG_DECLARATIVE_CONFIG",
                  "value": "/home/kong/kong.yaml"
                },
                {
                  "name": "KONG_LOG_LEVEL",
                  "value": "debug"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kong-config",
                  "mountPath": "/home/kong/"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "db",
            "properties": {
              "image": "postgres:15",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "rpsdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 8443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "Q1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTIGNpdGV4dDsNCkNSRUFURSBVU0VSIHJwc2RiOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgY2lyYWNvbmZpZ3MoDQogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0IE5PVCBOVUxMLA0KICBtcHNfc2VydmVyX2FkZHJlc3MgdmFyY2hhcigyNTYpLA0KICBtcHNfcG9ydCBpbnRlZ2VyLA0KICB1c2VyX25hbWUgdmFyY2hhcig0MCksDQogIHBhc3N3b3JkIHZhcmNoYXIoNjMpLA0KICBjb21tb25fbmFtZSB2YXJjaGFyKDI1NiksDQogIHNlcnZlcl9hZGRyZXNzX2Zvcm1hdCBpbnRlZ2VyLA0KICBhdXRoX21ldGhvZCBpbnRlZ2VyLA0KICBtcHNfcm9vdF9jZXJ0aWZpY2F0ZSB0ZXh0LA0KICBwcm94eWRldGFpbHMgdGV4dCwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAoY2lyYV9jb25maWdfbmFtZSwgdGVuYW50X2lkKQ0KKTsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGllZWU4MDIxeGNvbmZpZ3MoDQogICAgcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgICBhdXRoX3Byb3RvY29sIGludGVnZXIsDQogICAgc2VydmVybmFtZSBWQVJDSEFSKDI1NSksDQogICAgZG9tYWluIFZBUkNIQVIoMjU1KSwNCiAgICB1c2VybmFtZSBWQVJDSEFSKDI1NSksDQogICAgcGFzc3dvcmQgVkFSQ0hBUigyNTUpLA0KICAgIHJvYW1pbmdfaWRlbnRpdHkgVkFSQ0hBUigyNTUpLA0KICAgIGFjdGl2ZV9pbl9zMCBCT09MRUFOLA0KICAgIHB4ZV90aW1lb3V0IGludGVnZXIsDQogICAgd2lyZWRfaW50ZXJmYWNlIEJPT0xFQU4gTk9UIE5VTEwsDQogICAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICAgIFBSSU1BUlkgS0VZIChwcm9maWxlX25hbWUsIHRlbmFudF9pZCkNCik7DQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB3aXJlbGVzc2NvbmZpZ3MoDQogIHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGF1dGhlbnRpY2F0aW9uX21ldGhvZCBpbnRlZ2VyLA0KICBlbmNyeXB0aW9uX21ldGhvZCBpbnRlZ2VyLA0KICBzc2lkIHZhcmNoYXIoMzIpLA0KICBwc2tfdmFsdWUgaW50ZWdlciwNCiAgcHNrX3Bhc3NwaHJhc2UgdmFyY2hhcig2MyksDQogIGxpbmtfcG9saWN5IGludFtdLA0KICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICBpZWVlODAyMXhfcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgRk9SRUlHTiBLRVkgKGllZWU4MDIxeF9wcm9maWxlX25hbWUsdGVuYW50X2lkKSAgUkVGRVJFTkNFUyBpZWVlODAyMXhjb25maWdzKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLA0KICBQUklNQVJZIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLCB0ZW5hbnRfaWQpDQopOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcHJvZmlsZXMoDQogIHByb2ZpbGVfbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGFjdGl2YXRpb24gdmFyY2hhcigyMCkgTk9UIE5VTEwsDQogIGFtdF9wYXNzd29yZCB2YXJjaGFyKDQwKSwNCiAgZ2VuZXJhdGVfcmFuZG9tX3Bhc3N3b3JkIEJPT0xFQU4gTk9UIE5VTEwsDQogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0LA0KICBGT1JFSUdOIEtFWSAoY2lyYV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIGNpcmFjb25maWdzKGNpcmFfY29uZmlnX25hbWUsdGVuYW50X2lkKSwNCiAgY3JlYXRpb25fZGF0ZSB0aW1lc3RhbXAsDQogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksDQogIG1lYnhfcGFzc3dvcmQgdmFyY2hhcig0MCksDQogIGdlbmVyYXRlX3JhbmRvbV9tZWJ4X3Bhc3N3b3JkIEJPT0xFQU4gTk9UIE5VTEwsDQogIHRhZ3MgdGV4dFtdLA0KICBkaGNwX2VuYWJsZWQgQk9PTEVBTiwNCiAgaXBfc3luY19lbmFibGVkIEJPT0xFQU4gTlVMTCwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICB0bHNfbW9kZSBpbnRlZ2VyIE5VTEwsDQogIHVzZXJfY29uc2VudCB2YXJjaGFyKDcpIE5VTEwsDQogIGlkZXJfZW5hYmxlZCBCT09MRUFOIE5VTEwsDQogIGt2bV9lbmFibGVkIEJPT0xFQU4gTlVMTCwNCiAgc29sX2VuYWJsZWQgQk9PTEVBTiBOVUxMLA0KICB0bHNfc2lnbmluZ19hdXRob3JpdHkgdmFyY2hhcig0MCkgTlVMTCwNCiAgaWVlZTgwMjF4X3Byb2ZpbGVfbmFtZSBjaXRleHQsDQogIEZPUkVJR04gS0VZIChpZWVlODAyMXhfcHJvZmlsZV9uYW1lLHRlbmFudF9pZCkgIFJFRkVSRU5DRVMgaWVlZTgwMjF4Y29uZmlncyhwcm9maWxlX25hbWUsdGVuYW50X2lkKSwNCiAgUFJJTUFSWSBLRVkgKHByb2ZpbGVfbmFtZSwgdGVuYW50X2lkKQ0KKTsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2ZpbGVzX3dpcmVsZXNzY29uZmlncygNCiAgd2lyZWxlc3NfcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgRk9SRUlHTiBLRVkgKHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHdpcmVsZXNzY29uZmlncyh3aXJlbGVzc19wcm9maWxlX25hbWUsdGVuYW50X2lkKSwNCiAgRk9SRUlHTiBLRVkgKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHByb2ZpbGVzKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLA0KICBwcmlvcml0eSBpbnRlZ2VyLA0KICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLCBwcm9maWxlX25hbWUsIHByaW9yaXR5LCB0ZW5hbnRfaWQpDQopOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZG9tYWlucygNCiAgbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGRvbWFpbl9zdWZmaXggY2l0ZXh0IE5PVCBOVUxMLA0KICBwcm92aXNpb25pbmdfY2VydCB0ZXh0LA0KICBwcm92aXNpb25pbmdfY2VydF9zdG9yYWdlX2Zvcm1hdCB2YXJjaGFyKDQwKSwNCiAgcHJvdmlzaW9uaW5nX2NlcnRfa2V5IHRleHQsDQogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLA0KICBleHBpcmF0aW9uX2RhdGUgdGltZXN0YW1wLA0KICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLA0KICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsDQogIENPTlNUUkFJTlQgZG9tYWlubmFtZSBVTklRVUUgKG5hbWUsIHRlbmFudF9pZCksDQogIENPTlNUUkFJTlQgZG9tYWluc3VmZml4IFVOSVFVRSAoZG9tYWluX3N1ZmZpeCwgdGVuYW50X2lkKSwNCiAgUFJJTUFSWSBLRVkgKG5hbWUsIGRvbWFpbl9zdWZmaXgsIHRlbmFudF9pZCkNCik7DQpDUkVBVEUgVU5JUVVFIElOREVYIGxvd2VyX25hbWVfc3VmZml4X2lkeCBPTiBkb21haW5zICgobG93ZXIobmFtZSkpLCAobG93ZXIoZG9tYWluX3N1ZmZpeCkpKTsNCkNSRUFURSBEQVRBQkFTRSBtcHNkYjsNCg0KXGNvbm5lY3QgbXBzZGINCg0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZGV2aWNlcygNCiAgICAgIGd1aWQgdXVpZCBOT1QgTlVMTCwNCiAgICAgIHRhZ3MgdGV4dFtdLA0KICAgICAgaG9zdG5hbWUgdmFyY2hhcigyNTYpLA0KICAgICAgbXBzaW5zdGFuY2UgdGV4dCwgDQogICAgICBjb25uZWN0aW9uc3RhdHVzIGJvb2xlYW4sDQogICAgICBtcHN1c2VybmFtZSB0ZXh0LA0KICAgICAgdGVuYW50aWQgdmFyY2hhcigzNikgTk9UIE5VTEwsDQogICAgICBmcmllbmRseW5hbWUgdmFyY2hhcigyNTYpLA0KICAgICAgZG5zc3VmZml4IHZhcmNoYXIoMjU2KSwNCiAgICAgIGxhc3Rjb25uZWN0ZWQgdGltZXN0YW1wIHdpdGggdGltZSB6b25lLA0KICAgICAgbGFzdHNlZW4gdGltZXN0YW1wIHdpdGggdGltZSB6b25lLA0KICAgICAgbGFzdGRpc2Nvbm5lY3RlZCB0aW1lc3RhbXAgd2l0aCB0aW1lIHpvbmUsDQogICAgICBkZXZpY2VpbmZvIEpTT04sDQogICAgICBDT05TVFJBSU5UIGRldmljZV9ndWlkIFVOSVFVRShndWlkKSwNCiAgICAgIFBSSU1BUlkgS0VZIChndWlkLHRlbmFudGlkKQ0KICAgICk7IA=="
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsNCiAgICBsaXN0ZW4gODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgbGlzdGVuIFs6Ol06ODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgc2VydmVyX25hbWUgXzsNCiANCg0KICAgIGxvY2F0aW9uIC8gew0KICAgICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOw0KICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07DQogICAgfQ0KDQogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsNCg0KICAgICMgcmVkaXJlY3Qgc2VydmVyIGVycm9yIHBhZ2VzIHRvIHRoZSBzdGF0aWMgcGFnZSAvNTB4Lmh0bWwNCiAgICAjDQogICAgZXJyb3JfcGFnZSAgIDUwMCA1MDIgNTAzIDUwNCAgLzUweC5odG1sOw0KICAgIGxvY2F0aW9uID0gLzUweC5odG1sIHsNCiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsNCiAgICB9DQp9DQoNCg=="
            }
          },
          {
            "name": "kong-config",
            "secret": {
              "kong.yaml": "X2Zvcm1hdF92ZXJzaW9uOiAiMi4xIgpfdHJhbnNmb3JtOiB0cnVlCgpzZXJ2aWNlczoKLSBuYW1lOiBtcHMtcmVzdAogIGhvc3Q6IDEyNy4wLjAuMQogIHBvcnQ6IDMwMDAKICB0YWdzOgogIC0gbXBzCiAgcm91dGVzOgogIC0gbmFtZTogbXBzLXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL21wcwoKLSBuYW1lOiBtcHMtcmVzdC12MgogIGhvc3Q6IDEyNy4wLjAuMQogIHBvcnQ6IDMwMDAKICBwYXRoOiAvYXBpL3YxL2F1dGhvcml6ZQogIHRhZ3M6CiAgLSBtcHMKICByb3V0ZXM6CiAgLSBuYW1lOiBtcHMtbG9naW4tcm91dGUKICAgIHN0cmlwX3BhdGg6IHRydWUKICAgIHBhdGhzOgogICAgLSAvbXBzL2xvZ2luL2FwaS92MS9hdXRob3JpemUKCi0gbmFtZTogbXBzLXJlZGlyZWN0aW9uCiAgaG9zdDogMTI3LjAuMC4xCiAgcG9ydDogMzAwMAogIHBhdGg6IC9yZWxheQogIHRhZ3M6CiAgLSBtcHMKICByb3V0ZXM6CiAgLSBuYW1lOiBtcHMtcmVkaXJlY3Rpb24tcm91dGUKICAgIHN0cmlwX3BhdGg6IHRydWUKICAgIHBhdGhzOgogICAgLSAvbXBzL3dzL3JlbGF5CgotIG5hbWU6IHJwcy1yZXN0CiAgaG9zdDogMTI3LjAuMC4xCiAgcG9ydDogODA4MSAgCiAgdGFnczoKICAtIHJwcwogIHJvdXRlczoKICAtIG5hbWU6IHJwcy1yb3V0ZQogICAgc3RyaXBfcGF0aDogdHJ1ZQogICAgcGF0aHM6CiAgICAtIC9ycHMKCi0gbmFtZTogcnBzLXdzCiAgaG9zdDogMTI3LjAuMC4xCiAgcG9ydDogODA4MAogIHRhZ3M6CiAgLSBycHMKICByb3V0ZXM6CiAgLSBuYW1lOiBycHMtYWN0aXZhdGUtcm91dGUKICAgIHN0cmlwX3BhdGg6IHRydWUKICAgIHBhdGhzOgogICAgLSAvYWN0aXZhdGUKICAtIG5hbWU6IHJwcy1kZWFjdGl2YXRlLXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL2RlYWN0aXZhdGUKICAtIG5hbWU6IHJwcy1tYWludGVuYW5jZS1yb3V0ZQogICAgc3RyaXBfcGF0aDogdHJ1ZQogICAgcGF0aHM6CiAgICAtIC9tYWludGVuYW5jZQoKLSBuYW1lOiB2YXVsdC1hcGkKICBob3N0OiAxMjcuMC4wLjEKICBwb3J0OiA4MjAwIAogIHRhZ3M6CiAgLSB2YXVsdAogIHJvdXRlczoKICAtIG5hbWU6IHZhdWx0LXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL3ZhdWx0CgotIG5hbWU6IG1vc3F1aXR0by13cwogIGhvc3Q6IDEyNy4wLjAuMQogIHBvcnQ6IDkwMDEKICB0YWdzOgogIC0gbW9zcXVpdHRvCiAgcm91dGVzOgogIC0gbmFtZTogbW9zcXVpdHRvLXJvdXRlCiAgICBzdHJpcF9wYXRoOiB0cnVlCiAgICBwYXRoczoKICAgIC0gL21vc3F1aXR0bwoKLSBuYW1lOiB3ZWIKICBob3N0OiAxMjcuMC4wLjEKICBwb3J0OiA4MAogIHRhZ3M6CiAgLSB3ZWIKICByb3V0ZXM6CiAgLSBuYW1lOiB3ZWItcm91dGUKICAgIHBhdGhzOgogICAgLSAvCgpwbHVnaW5zOgotIG5hbWU6IGNvcnMgCi0gbmFtZTogand0CiAgcm91dGU6IHJwcy1yb3V0ZQogIGNvbmZpZzoKICAgIGNsYWltc190b192ZXJpZnk6CiAgICAtIGV4cAotIG5hbWU6IGp3dAogIHJvdXRlOiBtcHMtcm91dGUKICBjb25maWc6CiAgICBjbGFpbXNfdG9fdmVyaWZ5OgogICAgLSBleHAKCmNvbnN1bWVyczoKICAtIHVzZXJuYW1lOiBhZG1pbgpqd3Rfc2VjcmV0czoKICAtIGNvbnN1bWVyOiBhZG1pbgogICAga2V5OiA5RW1SSlRiSWlJYjRiSWVTc21nY1dJanJSNkh5RVRxYyAjc2FtcGxlIGtleQogICAgc2VjcmV0OiAic3VwZXJzZWNyZXQiCg=="
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}