{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the root token to use for Vault in DEV mode"
      }
    },
    "rpsImageName": {
      "defaultValue": "rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminUsername": {
      "type": "securestring",
      "defaultValue": "postgresadmin",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminPassword": {
      "type": "securestring",
      "defaultValue": "admin123",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "tokenExpiration": {
      "defaultValue": "1440",
      "type": "string",
      "metadata": {
        "description": "Specifies the duration (in minutes) that a token will be valid for"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "RPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/rpsdb')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_JWT_EXPIRATION",
                  "value": "[parameters('tokenExpiration')]"
                },
                {
                  "name": "MPS_JWT_SECRET",
                  "value": "supersecret"
                },
                {
                  "name": "MPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "MPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/mpsdb')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/mps')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/rps')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "kong",
            "properties": {
              "image": "kong:2.3",
              "ports": [
                {
                  "port": 8443
                }
              ],
              "command": [
                "kong",
                "start",
                "--vv"
              ],
              "environmentVariables": [
                {
                  "name": "KONG_DATABASE",
                  "value": "off"
                },
                {
                  "name": "KONG_CASSANDRA_CONTACT_POINTS",
                  "value": "kong-database"
                },
                {
                  "name": "KONG_ADMIN_LISTEN",
                  "value": "0.0.0.0:8001"
                },
                {
                  "name": "KONG_ADMIN_LISTEN_SSL",
                  "value": "0.0.0.0:8444"
                },
                {
                  "name": "KONG_NGINX_DAEMON",
                  "value": "off"
                },
                {
                  "name": "KONG_DECLARATIVE_CONFIG",
                  "value": "/home/kong/kong.yaml"
                },
                {
                  "name": "KONG_LOG_LEVEL",
                  "value": "debug"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kong-config",
                  "mountPath": "/home/kong/"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "db",
            "properties": {
              "image": "postgres:latest",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "rpsdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "ip": "168.61.3.88",
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 8443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "Q1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTIGNpdGV4dDsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGNpcmFjb25maWdzKA0KICBjaXJhX2NvbmZpZ19uYW1lIGNpdGV4dCBOT1QgTlVMTCwNCiAgbXBzX3NlcnZlcl9hZGRyZXNzIHZhcmNoYXIoMjU2KSwNCiAgbXBzX3BvcnQgaW50ZWdlciwNCiAgdXNlcl9uYW1lIHZhcmNoYXIoNDApLA0KICBwYXNzd29yZCB2YXJjaGFyKDYzKSwNCiAgY29tbW9uX25hbWUgdmFyY2hhcigyNTYpLA0KICBzZXJ2ZXJfYWRkcmVzc19mb3JtYXQgaW50ZWdlciwgDQogIGF1dGhfbWV0aG9kIGludGVnZXIsIA0KICBtcHNfcm9vdF9jZXJ0aWZpY2F0ZSB0ZXh0LCANCiAgcHJveHlkZXRhaWxzIHRleHQsDQogIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKGNpcmFfY29uZmlnX25hbWUsIHRlbmFudF9pZCkNCik7DQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB3aXJlbGVzc2NvbmZpZ3MoDQogIHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGF1dGhlbnRpY2F0aW9uX21ldGhvZCBpbnRlZ2VyLA0KICBlbmNyeXB0aW9uX21ldGhvZCBpbnRlZ2VyLA0KICBzc2lkIHZhcmNoYXIoMzIpLA0KICBwc2tfdmFsdWUgaW50ZWdlciwNCiAgcHNrX3Bhc3NwaHJhc2UgdmFyY2hhcig2MyksDQogIGxpbmtfcG9saWN5IGludFtdLA0KICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLCB0ZW5hbnRfaWQpDQopOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcHJvZmlsZXMoDQogIHByb2ZpbGVfbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGFjdGl2YXRpb24gdmFyY2hhcigyMCkgTk9UIE5VTEwsDQogIGFtdF9wYXNzd29yZCB2YXJjaGFyKDQwKSwNCiAgZ2VuZXJhdGVfcmFuZG9tX3Bhc3N3b3JkIEJPT0xFQU4gTk9UIE5VTEwsDQogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0LA0KICBGT1JFSUdOIEtFWSAoY2lyYV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIGNpcmFjb25maWdzKGNpcmFfY29uZmlnX25hbWUsdGVuYW50X2lkKSwNCiAgY3JlYXRpb25fZGF0ZSB0aW1lc3RhbXAsDQogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksDQogIG1lYnhfcGFzc3dvcmQgdmFyY2hhcig0MCksDQogIGdlbmVyYXRlX3JhbmRvbV9tZWJ4X3Bhc3N3b3JkIEJPT0xFQU4gTk9UIE5VTEwsDQogIHRhZ3MgdGV4dFtdLA0KICBkaGNwX2VuYWJsZWQgQk9PTEVBTiwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLCAgDQogIHRsc19tb2RlIGludGVnZXIgTlVMTCwNCiAgUFJJTUFSWSBLRVkgKHByb2ZpbGVfbmFtZSwgdGVuYW50X2lkKQ0KKTsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2ZpbGVzX3dpcmVsZXNzY29uZmlncygNCiAgd2lyZWxlc3NfcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgRk9SRUlHTiBLRVkgKHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHdpcmVsZXNzY29uZmlncyh3aXJlbGVzc19wcm9maWxlX25hbWUsdGVuYW50X2lkKSwNCiAgRk9SRUlHTiBLRVkgKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHByb2ZpbGVzKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLA0KICBwcmlvcml0eSBpbnRlZ2VyLA0KICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLCBwcm9maWxlX25hbWUsIHByaW9yaXR5LCB0ZW5hbnRfaWQpDQopOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZG9tYWlucygNCiAgbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGRvbWFpbl9zdWZmaXggY2l0ZXh0IE5PVCBOVUxMLA0KICBwcm92aXNpb25pbmdfY2VydCB0ZXh0LA0KICBwcm92aXNpb25pbmdfY2VydF9zdG9yYWdlX2Zvcm1hdCB2YXJjaGFyKDQwKSwNCiAgcHJvdmlzaW9uaW5nX2NlcnRfa2V5IHRleHQsDQogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLA0KICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLA0KICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsDQogIENPTlNUUkFJTlQgZG9tYWluc3VmZml4IFVOSVFVRShkb21haW5fc3VmZml4LHRlbmFudF9pZCksDQogIFBSSU1BUlkgS0VZIChuYW1lLCB0ZW5hbnRfaWQpDQopOw0KDQpDUkVBVEUgVU5JUVVFIElOREVYIGxvd2VyX25hbWVfc3VmZml4X2lkeCBPTiBkb21haW5zICgobG93ZXIobmFtZSkpLCAobG93ZXIoZG9tYWluX3N1ZmZpeCkpKTsNCg0KQ1JFQVRFIERBVEFCQVNFIG1wc2RiOw0KDQpcY29ubmVjdCBtcHNkYg0KDQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBkZXZpY2VzKA0KICAgIGd1aWQgdXVpZCBOT1QgTlVMTCwNCiAgICB0YWdzIHRleHRbXSwNCiAgICBob3N0bmFtZSB2YXJjaGFyKDI1NiksDQogICAgbXBzaW5zdGFuY2UgdGV4dCwgDQogICAgY29ubmVjdGlvbnN0YXR1cyBib29sZWFuLA0KICAgIG1wc3VzZXJuYW1lIHRleHQsDQogICAgdGVuYW50aWQgdmFyY2hhcigzNiksDQogICAgUFJJTUFSWSBLRVkgKGd1aWQsdGVuYW50aWQpDQopOyANCg=="
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsNCiAgICBsaXN0ZW4gODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgbGlzdGVuIFs6Ol06ODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgc2VydmVyX25hbWUgXzsNCiANCg0KICAgIGxvY2F0aW9uIC8gew0KICAgICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOw0KICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07DQogICAgfQ0KDQogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsNCg0KICAgICMgcmVkaXJlY3Qgc2VydmVyIGVycm9yIHBhZ2VzIHRvIHRoZSBzdGF0aWMgcGFnZSAvNTB4Lmh0bWwNCiAgICAjDQogICAgZXJyb3JfcGFnZSAgIDUwMCA1MDIgNTAzIDUwNCAgLzUweC5odG1sOw0KICAgIGxvY2F0aW9uID0gLzUweC5odG1sIHsNCiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsNCiAgICB9DQp9DQoNCg=="
            }
          },
          {
            "name": "kong-config",
            "secret": {
              "kong.yaml": "IyBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTgtMjAxOQ0KIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMA0KDQpfZm9ybWF0X3ZlcnNpb246ICIyLjEiDQpfdHJhbnNmb3JtOiB0cnVlDQoNCnNlcnZpY2VzOg0KLSBuYW1lOiBtcHMtcmVzdA0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogODAwMw0KICB0YWdzOg0KICAtIG1wcw0KICByb3V0ZXM6DQogIC0gbmFtZTogbXBzLXJlbGF5LXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21wcy93cw0KICAtIG5hbWU6IG1wcy1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9tcHMNCg0KLSBuYW1lOiBtcHMtcmVzdC12Mg0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogMzAwMA0KICBwYXRoOiAvYXBpL3YxL2F1dGhvcml6ZQ0KICB0YWdzOg0KICAtIG1wcw0KICByb3V0ZXM6DQogIC0gbmFtZTogbXBzLWxvZ2luLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21wcy9sb2dpbi9hcGkvdjEvYXV0aG9yaXplDQogDQotIG5hbWU6IHJwcy1yZXN0DQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiA4MDgxICANCiAgdGFnczoNCiAgLSBycHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IHJwcy1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9ycHMNCg0KLSBuYW1lOiBycHMtd3MNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDgwODANCiAgdGFnczoNCiAgLSBycHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IHJwcy1hY3RpdmF0ZS1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9hY3RpdmF0ZQ0KDQotIG5hbWU6IHZhdWx0LWFwaQ0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogODIwMCANCiAgdGFnczoNCiAgLSB2YXVsdA0KICByb3V0ZXM6DQogIC0gbmFtZTogdmF1bHQtcm91dGUNCiAgICBzdHJpcF9wYXRoOiB0cnVlDQogICAgcGF0aHM6DQogICAgLSAvdmF1bHQNCg0KLSBuYW1lOiBtb3NxdWl0dG8td3MNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDkwMDENCiAgdGFnczoNCiAgLSBtb3NxdWl0dG8NCiAgcm91dGVzOg0KICAtIG5hbWU6IG1vc3F1aXR0by1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9tb3NxdWl0dG8NCg0KLSBuYW1lOiB3ZWINCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDgwDQogIHRhZ3M6DQogIC0gd2ViDQogIHJvdXRlczoNCiAgLSBuYW1lOiB3ZWItcm91dGUNCiAgICBwYXRoczoNCiAgICAtIC8NCg0KcGx1Z2luczoNCi0gbmFtZTogY29ycyANCi0gbmFtZTogand0DQogIHJvdXRlOiBycHMtcm91dGUNCiAgY29uZmlnOg0KICAgIGNsYWltc190b192ZXJpZnk6DQogICAgLSBleHANCi0gbmFtZTogand0DQogIHJvdXRlOiBtcHMtcm91dGUNCiAgY29uZmlnOg0KICAgIGNsYWltc190b192ZXJpZnk6DQogICAgLSBleHANCg0KY29uc3VtZXJzOg0KICAtIHVzZXJuYW1lOiBhZG1pbg0Kand0X3NlY3JldHM6DQogIC0gY29uc3VtZXI6IGFkbWluDQogICAga2V5OiA5RW1SSlRiSWlJYjRiSWVTc21nY1dJanJSNkh5RVRxYyAjc2FtcGxlIGtleQ0KICAgIHNlY3JldDogInN1cGVyc2VjcmV0Ig0K"
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}