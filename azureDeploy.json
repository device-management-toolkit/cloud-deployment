{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",
      "defaultValue": "docker.io",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the root token to use for Vault in DEV mode"
      }
    },
    "rpsImageName": {
      "defaultValue": "intel/oact-rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "intel/oact-mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "intel/oact-webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminUsername": {
      "type": "securestring",
      "defaultValue": "postgresadmin",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminPassword": {
      "type": "securestring",
      "defaultValue": "admin123",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "tokenExpiration": {
      "defaultValue": "1440",
      "type": "string",
      "metadata": {
        "description": "Specifies the duration (in minutes) that a token will be valid for"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "RPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/rpsdb')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_JWT_EXPIRATION",
                  "value": "[parameters('tokenExpiration')]"
                },
                {
                  "name": "MPS_JWT_SECRET",
                  "value": "supersecret"
                },
                {
                  "name": "MPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "MPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/mpsdb')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/mps')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/rps')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "kong",
            "properties": {
              "image": "kong:2.3",
              "ports": [
                {
                  "port": 8443
                }
              ],
              "command": [
                "kong",
                "start",
                "--vv"
              ],
              "environmentVariables": [
                {
                  "name": "KONG_DATABASE",
                  "value": "off"
                },
                {
                  "name": "KONG_CASSANDRA_CONTACT_POINTS",
                  "value": "kong-database"
                },
                {
                  "name": "KONG_ADMIN_LISTEN",
                  "value": "0.0.0.0:8001"
                },
                {
                  "name": "KONG_ADMIN_LISTEN_SSL",
                  "value": "0.0.0.0:8444"
                },
                {
                  "name": "KONG_NGINX_DAEMON",
                  "value": "off"
                },
                {
                  "name": "KONG_DECLARATIVE_CONFIG",
                  "value": "/home/kong/kong.yaml"
                },
                {
                  "name": "KONG_LOG_LEVEL",
                  "value": "debug"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kong-config",
                  "mountPath": "/home/kong/"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "db",
            "properties": {
              "image": "postgres:15",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "rpsdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 8443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "Q1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTIGNpdGV4dDsKQ1JFQVRFIFVTRVIgcnBzZGI7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGNpcmFjb25maWdzKAogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0IE5PVCBOVUxMLAogIG1wc19zZXJ2ZXJfYWRkcmVzcyB2YXJjaGFyKDI1NiksCiAgbXBzX3BvcnQgaW50ZWdlciwKICB1c2VyX25hbWUgdmFyY2hhcig0MCksCiAgcGFzc3dvcmQgdmFyY2hhcig2MyksCiAgY29tbW9uX25hbWUgdmFyY2hhcigyNTYpLAogIHNlcnZlcl9hZGRyZXNzX2Zvcm1hdCBpbnRlZ2VyLAogIGF1dGhfbWV0aG9kIGludGVnZXIsCiAgbXBzX3Jvb3RfY2VydGlmaWNhdGUgdGV4dCwKICBwcm94eWRldGFpbHMgdGV4dCwKICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsCiAgUFJJTUFSWSBLRVkgKGNpcmFfY29uZmlnX25hbWUsIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgaWVlZTgwMjF4Y29uZmlncygKICAgIHByb2ZpbGVfbmFtZSBjaXRleHQsCiAgICBhdXRoX3Byb3RvY29sIGludGVnZXIsCiAgICBzZXJ2ZXJuYW1lIFZBUkNIQVIoMjU1KSwKICAgIGRvbWFpbiBWQVJDSEFSKDI1NSksCiAgICB1c2VybmFtZSBWQVJDSEFSKDI1NSksCiAgICBwYXNzd29yZCBWQVJDSEFSKDI1NSksCiAgICByb2FtaW5nX2lkZW50aXR5IFZBUkNIQVIoMjU1KSwKICAgIGFjdGl2ZV9pbl9zMCBCT09MRUFOLAogICAgcHhlX3RpbWVvdXQgaW50ZWdlciwKICAgIHdpcmVkX2ludGVyZmFjZSBCT09MRUFOIE5PVCBOVUxMLAogICAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLAogICAgUFJJTUFSWSBLRVkgKHByb2ZpbGVfbmFtZSwgdGVuYW50X2lkKQopOwpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB3aXJlbGVzc2NvbmZpZ3MoCiAgd2lyZWxlc3NfcHJvZmlsZV9uYW1lIGNpdGV4dCBOT1QgTlVMTCwKICBhdXRoZW50aWNhdGlvbl9tZXRob2QgaW50ZWdlciwKICBlbmNyeXB0aW9uX21ldGhvZCBpbnRlZ2VyLAogIHNzaWQgdmFyY2hhcigzMiksCiAgcHNrX3ZhbHVlIGludGVnZXIsCiAgcHNrX3Bhc3NwaHJhc2UgdmFyY2hhcig2MyksCiAgbGlua19wb2xpY3kgaW50W10sCiAgY3JlYXRpb25fZGF0ZSB0aW1lc3RhbXAsCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwKICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsCiAgaWVlZTgwMjF4X3Byb2ZpbGVfbmFtZSBjaXRleHQsCiAgRk9SRUlHTiBLRVkgKGllZWU4MDIxeF9wcm9maWxlX25hbWUsdGVuYW50X2lkKSAgUkVGRVJFTkNFUyBpZWVlODAyMXhjb25maWdzKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLAogIFBSSU1BUlkgS0VZICh3aXJlbGVzc19wcm9maWxlX25hbWUsIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcHJvZmlsZXMoCiAgcHJvZmlsZV9uYW1lIGNpdGV4dCBOT1QgTlVMTCwKICBhY3RpdmF0aW9uIHZhcmNoYXIoMjApIE5PVCBOVUxMLAogIGFtdF9wYXNzd29yZCB2YXJjaGFyKDQwKSwKICBnZW5lcmF0ZV9yYW5kb21fcGFzc3dvcmQgQk9PTEVBTiBOT1QgTlVMTCwKICBjaXJhX2NvbmZpZ19uYW1lIGNpdGV4dCwKICBGT1JFSUdOIEtFWSAoY2lyYV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIGNpcmFjb25maWdzKGNpcmFfY29uZmlnX25hbWUsdGVuYW50X2lkKSwKICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLAogIG1lYnhfcGFzc3dvcmQgdmFyY2hhcig0MCksCiAgZ2VuZXJhdGVfcmFuZG9tX21lYnhfcGFzc3dvcmQgQk9PTEVBTiBOT1QgTlVMTCwKICB0YWdzIHRleHRbXSwKICBkaGNwX2VuYWJsZWQgQk9PTEVBTiwKICBpcF9zeW5jX2VuYWJsZWQgQk9PTEVBTiBOVUxMLAogIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwKICB0bHNfbW9kZSBpbnRlZ2VyIE5VTEwsCiAgdXNlcl9jb25zZW50IHZhcmNoYXIoNykgTlVMTCwKICBpZGVyX2VuYWJsZWQgQk9PTEVBTiBOVUxMLAogIGt2bV9lbmFibGVkIEJPT0xFQU4gTlVMTCwKICBzb2xfZW5hYmxlZCBCT09MRUFOIE5VTEwsCiAgdGxzX3NpZ25pbmdfYXV0aG9yaXR5IHZhcmNoYXIoNDApIE5VTEwsCiAgaWVlZTgwMjF4X3Byb2ZpbGVfbmFtZSBjaXRleHQsCiAgRk9SRUlHTiBLRVkgKGllZWU4MDIxeF9wcm9maWxlX25hbWUsdGVuYW50X2lkKSAgUkVGRVJFTkNFUyBpZWVlODAyMXhjb25maWdzKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLAogIFBSSU1BUlkgS0VZIChwcm9maWxlX25hbWUsIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcHJvZmlsZXNfd2lyZWxlc3Njb25maWdzKAogIHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSBjaXRleHQsCiAgcHJvZmlsZV9uYW1lIGNpdGV4dCwKICBGT1JFSUdOIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLHRlbmFudF9pZCkgIFJFRkVSRU5DRVMgd2lyZWxlc3Njb25maWdzKHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLAogIEZPUkVJR04gS0VZIChwcm9maWxlX25hbWUsdGVuYW50X2lkKSAgUkVGRVJFTkNFUyBwcm9maWxlcyhwcm9maWxlX25hbWUsdGVuYW50X2lkKSwKICBwcmlvcml0eSBpbnRlZ2VyLAogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLAogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLAogIFBSSU1BUlkgS0VZICh3aXJlbGVzc19wcm9maWxlX25hbWUsIHByb2ZpbGVfbmFtZSwgcHJpb3JpdHksIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZG9tYWlucygKICBuYW1lIGNpdGV4dCBOT1QgTlVMTCwKICBkb21haW5fc3VmZml4IGNpdGV4dCBOT1QgTlVMTCwKICBwcm92aXNpb25pbmdfY2VydCB0ZXh0LAogIHByb3Zpc2lvbmluZ19jZXJ0X3N0b3JhZ2VfZm9ybWF0IHZhcmNoYXIoNDApLAogIHByb3Zpc2lvbmluZ19jZXJ0X2tleSB0ZXh0LAogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLAogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLAogIENPTlNUUkFJTlQgZG9tYWluc3VmZml4IFVOSVFVRShkb21haW5fc3VmZml4LHRlbmFudF9pZCksCiAgUFJJTUFSWSBLRVkgKG5hbWUsIHRlbmFudF9pZCkKKTsKQ1JFQVRFIFVOSVFVRSBJTkRFWCBsb3dlcl9uYW1lX3N1ZmZpeF9pZHggT04gZG9tYWlucyAoKGxvd2VyKG5hbWUpKSwgKGxvd2VyKGRvbWFpbl9zdWZmaXgpKSk7CkNSRUFURSBEQVRBQkFTRSBtcHNkYjsKClxjb25uZWN0IG1wc2RiCgpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBkZXZpY2VzKAogICAgICBndWlkIHV1aWQgTk9UIE5VTEwsCiAgICAgIHRhZ3MgdGV4dFtdLAogICAgICBob3N0bmFtZSB2YXJjaGFyKDI1NiksCiAgICAgIG1wc2luc3RhbmNlIHRleHQsIAogICAgICBjb25uZWN0aW9uc3RhdHVzIGJvb2xlYW4sCiAgICAgIG1wc3VzZXJuYW1lIHRleHQsCiAgICAgIHRlbmFudGlkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLAogICAgICBmcmllbmRseW5hbWUgdmFyY2hhcigyNTYpLAogICAgICBkbnNzdWZmaXggdmFyY2hhcigyNTYpLAogICAgICBDT05TVFJBSU5UIGRldmljZV9ndWlkIFVOSVFVRShndWlkKSwKICAgICAgUFJJTUFSWSBLRVkgKGd1aWQsIHRlbmFudGlkKQogICAgKTsgCg=="
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsNCiAgICBsaXN0ZW4gODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgbGlzdGVuIFs6Ol06ODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgc2VydmVyX25hbWUgXzsNCiANCg0KICAgIGxvY2F0aW9uIC8gew0KICAgICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOw0KICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07DQogICAgfQ0KDQogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsNCg0KICAgICMgcmVkaXJlY3Qgc2VydmVyIGVycm9yIHBhZ2VzIHRvIHRoZSBzdGF0aWMgcGFnZSAvNTB4Lmh0bWwNCiAgICAjDQogICAgZXJyb3JfcGFnZSAgIDUwMCA1MDIgNTAzIDUwNCAgLzUweC5odG1sOw0KICAgIGxvY2F0aW9uID0gLzUweC5odG1sIHsNCiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsNCiAgICB9DQp9DQoNCg=="
            }
          },
          {
            "name": "kong-config",
            "secret": {
              "kong.yaml": "X2Zvcm1hdF92ZXJzaW9uOiAiMi4xIg0KX3RyYW5zZm9ybTogdHJ1ZQ0KDQpzZXJ2aWNlczoNCi0gbmFtZTogbXBzLXJlc3QNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDMwMDANCiAgdGFnczoNCiAgLSBtcHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IG1wcy1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9tcHMNCg0KLSBuYW1lOiBtcHMtcmVzdC12Mg0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogMzAwMA0KICBwYXRoOiAvYXBpL3YxL2F1dGhvcml6ZQ0KICB0YWdzOg0KICAtIG1wcw0KICByb3V0ZXM6DQogIC0gbmFtZTogbXBzLWxvZ2luLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21wcy9sb2dpbi9hcGkvdjEvYXV0aG9yaXplDQoNCi0gbmFtZTogbXBzLXJlZGlyZWN0aW9uDQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiAzMDAwDQogIHBhdGg6IC9yZWxheQ0KICB0YWdzOg0KICAtIG1wcw0KICByb3V0ZXM6DQogIC0gbmFtZTogbXBzLXJlZGlyZWN0aW9uLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21wcy93cy9yZWxheQ0KDQotIG5hbWU6IHJwcy1yZXN0DQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiA4MDgxICANCiAgdGFnczoNCiAgLSBycHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IHJwcy1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9ycHMNCg0KLSBuYW1lOiBycHMtd3MNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDgwODANCiAgdGFnczoNCiAgLSBycHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IHJwcy1hY3RpdmF0ZS1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9hY3RpdmF0ZQ0KICAtIG5hbWU6IHJwcy1kZWFjdGl2YXRlLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL2RlYWN0aXZhdGUNCg0KLSBuYW1lOiB2YXVsdC1hcGkNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDgyMDAgDQogIHRhZ3M6DQogIC0gdmF1bHQNCiAgcm91dGVzOg0KICAtIG5hbWU6IHZhdWx0LXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL3ZhdWx0DQoNCi0gbmFtZTogbW9zcXVpdHRvLXdzDQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiA5MDAxDQogIHRhZ3M6DQogIC0gbW9zcXVpdHRvDQogIHJvdXRlczoNCiAgLSBuYW1lOiBtb3NxdWl0dG8tcm91dGUNCiAgICBzdHJpcF9wYXRoOiB0cnVlDQogICAgcGF0aHM6DQogICAgLSAvbW9zcXVpdHRvDQoNCi0gbmFtZTogd2ViDQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiA4MA0KICB0YWdzOg0KICAtIHdlYg0KICByb3V0ZXM6DQogIC0gbmFtZTogd2ViLXJvdXRlDQogICAgcGF0aHM6DQogICAgLSAvDQoNCnBsdWdpbnM6DQotIG5hbWU6IGNvcnMgDQotIG5hbWU6IGp3dA0KICByb3V0ZTogcnBzLXJvdXRlDQogIGNvbmZpZzoNCiAgICBjbGFpbXNfdG9fdmVyaWZ5Og0KICAgIC0gZXhwDQotIG5hbWU6IGp3dA0KICByb3V0ZTogbXBzLXJvdXRlDQogIGNvbmZpZzoNCiAgICBjbGFpbXNfdG9fdmVyaWZ5Og0KICAgIC0gZXhwDQoNCmNvbnN1bWVyczoNCiAgLSB1c2VybmFtZTogYWRtaW4NCmp3dF9zZWNyZXRzOg0KICAtIGNvbnN1bWVyOiBhZG1pbg0KICAgIGtleTogOUVtUkpUYklpSWI0YkllU3NtZ2NXSWpyUjZIeUVUcWMgI3NhbXBsZSBrZXkNCiAgICBzZWNyZXQ6ICJzdXBlcnNlY3JldCINCg=="
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}
