{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",      
      "defaultValue": "docker.io",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the root token to use for Vault in DEV mode"
      }
    },
    "rpsImageName": {
      "defaultValue": "intel/oact-rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "intel/oact-mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "intel/oact-webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminUsername": {
      "type": "securestring",
      "defaultValue": "postgresadmin",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "dbAdminPassword": {
      "type": "securestring",
      "defaultValue": "admin123",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "tokenExpiration": {
      "defaultValue": "1440",
      "type": "string",
      "metadata": {
        "description": "Specifies the duration (in minutes) that a token will be valid for"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "RPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/rpsdb')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_JWT_EXPIRATION",
                  "value": "[parameters('tokenExpiration')]"
                },
                {
                  "name": "MPS_JWT_SECRET",
                  "value": "supersecret"
                },
                {
                  "name": "MPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "MPS_CONNECTION_STRING",
                  "value": "[concat('postgresql://',parameters('dbAdminUsername'),':',parameters('dbAdminPassword'),'@localhost:5432/mpsdb')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/mps')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/rps')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "kong",
            "properties": {
              "image": "kong:2.3",
              "ports": [
                {
                  "port": 8443
                }
              ],
              "command": [
                "kong",
                "start",
                "--vv"
              ],
              "environmentVariables": [
                {
                  "name": "KONG_DATABASE",
                  "value": "off"
                },
                {
                  "name": "KONG_CASSANDRA_CONTACT_POINTS",
                  "value": "kong-database"
                },
                {
                  "name": "KONG_ADMIN_LISTEN",
                  "value": "0.0.0.0:8001"
                },
                {
                  "name": "KONG_ADMIN_LISTEN_SSL",
                  "value": "0.0.0.0:8444"
                },
                {
                  "name": "KONG_NGINX_DAEMON",
                  "value": "off"
                },
                {
                  "name": "KONG_DECLARATIVE_CONFIG",
                  "value": "/home/kong/kong.yaml"
                },
                {
                  "name": "KONG_LOG_LEVEL",
                  "value": "debug"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kong-config",
                  "mountPath": "/home/kong/"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "db",
            "properties": {
              "image": "postgres:15",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "rpsdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 8443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "Q1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTIGNpdGV4dDsNCkNSRUFURSBVU0VSIHJwc2RiOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgY2lyYWNvbmZpZ3MoDQogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0IE5PVCBOVUxMLA0KICBtcHNfc2VydmVyX2FkZHJlc3MgdmFyY2hhcigyNTYpLA0KICBtcHNfcG9ydCBpbnRlZ2VyLA0KICB1c2VyX25hbWUgdmFyY2hhcig0MCksDQogIHBhc3N3b3JkIHZhcmNoYXIoNjMpLA0KICBjb21tb25fbmFtZSB2YXJjaGFyKDI1NiksDQogIHNlcnZlcl9hZGRyZXNzX2Zvcm1hdCBpbnRlZ2VyLA0KICBhdXRoX21ldGhvZCBpbnRlZ2VyLA0KICBtcHNfcm9vdF9jZXJ0aWZpY2F0ZSB0ZXh0LA0KICBwcm94eWRldGFpbHMgdGV4dCwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAoY2lyYV9jb25maWdfbmFtZSwgdGVuYW50X2lkKQ0KKTsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHdpcmVsZXNzY29uZmlncygNCiAgd2lyZWxlc3NfcHJvZmlsZV9uYW1lIGNpdGV4dCBOT1QgTlVMTCwNCiAgYXV0aGVudGljYXRpb25fbWV0aG9kIGludGVnZXIsDQogIGVuY3J5cHRpb25fbWV0aG9kIGludGVnZXIsDQogIHNzaWQgdmFyY2hhcigzMiksDQogIHBza192YWx1ZSBpbnRlZ2VyLA0KICBwc2tfcGFzc3BocmFzZSB2YXJjaGFyKDYzKSwNCiAgbGlua19wb2xpY3kgaW50W10sDQogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLA0KICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLA0KICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZICh3aXJlbGVzc19wcm9maWxlX25hbWUsIHRlbmFudF9pZCkNCik7DQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBpZWVlODAyMXhjb25maWdzKA0KICAgIHByb2ZpbGVfbmFtZSBjaXRleHQsDQogICAgYXV0aF9wcm90b2NvbCBpbnRlZ2VyLA0KICAgIHNlcnZlcm5hbWUgVkFSQ0hBUigyNTUpLA0KICAgIGRvbWFpbiBWQVJDSEFSKDI1NSksDQogICAgdXNlcm5hbWUgVkFSQ0hBUigyNTUpLA0KICAgIHBhc3N3b3JkIFZBUkNIQVIoMjU1KSwNCiAgICByb2FtaW5nX2lkZW50aXR5IFZBUkNIQVIoMjU1KSwNCiAgICBhY3RpdmVfaW5fczAgQk9PTEVBTiwNCiAgICBweGVfdGltZW91dCBpbnRlZ2VyLA0KICAgIHdpcmVkX2ludGVyZmFjZSBCT09MRUFOIE5PVCBOVUxMLA0KICAgIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwNCiAgICBQUklNQVJZIEtFWSAocHJvZmlsZV9uYW1lLCB0ZW5hbnRfaWQpDQopOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcHJvZmlsZXMoDQogIHByb2ZpbGVfbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGFjdGl2YXRpb24gdmFyY2hhcigyMCkgTk9UIE5VTEwsDQogIGFtdF9wYXNzd29yZCB2YXJjaGFyKDQwKSwNCiAgZ2VuZXJhdGVfcmFuZG9tX3Bhc3N3b3JkIEJPT0xFQU4gTk9UIE5VTEwsDQogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0LA0KICBGT1JFSUdOIEtFWSAoY2lyYV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIGNpcmFjb25maWdzKGNpcmFfY29uZmlnX25hbWUsdGVuYW50X2lkKSwNCiAgY3JlYXRpb25fZGF0ZSB0aW1lc3RhbXAsDQogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksDQogIG1lYnhfcGFzc3dvcmQgdmFyY2hhcig0MCksDQogIGdlbmVyYXRlX3JhbmRvbV9tZWJ4X3Bhc3N3b3JkIEJPT0xFQU4gTk9UIE5VTEwsDQogIHRhZ3MgdGV4dFtdLA0KICBkaGNwX2VuYWJsZWQgQk9PTEVBTiwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICB0bHNfbW9kZSBpbnRlZ2VyIE5VTEwsDQogIHVzZXJfY29uc2VudCB2YXJjaGFyKDcpIE5VTEwsDQogIGlkZXJfZW5hYmxlZCBCT09MRUFOIE5VTEwsDQogIGt2bV9lbmFibGVkIEJPT0xFQU4gTlVMTCwNCiAgc29sX2VuYWJsZWQgQk9PTEVBTiBOVUxMLA0KICB0bHNfc2lnbmluZ19hdXRob3JpdHkgdmFyY2hhcig0MCkgTlVMTCwNCiAgaWVlZTgwMjF4X3Byb2ZpbGVfbmFtZSBjaXRleHQsDQogIEZPUkVJR04gS0VZIChpZWVlODAyMXhfcHJvZmlsZV9uYW1lLHRlbmFudF9pZCkgIFJFRkVSRU5DRVMgaWVlZTgwMjF4Y29uZmlncyhwcm9maWxlX25hbWUsdGVuYW50X2lkKSwNCiAgUFJJTUFSWSBLRVkgKHByb2ZpbGVfbmFtZSwgdGVuYW50X2lkKQ0KKTsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2ZpbGVzX3dpcmVsZXNzY29uZmlncygNCiAgd2lyZWxlc3NfcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgcHJvZmlsZV9uYW1lIGNpdGV4dCwNCiAgRk9SRUlHTiBLRVkgKHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHdpcmVsZXNzY29uZmlncyh3aXJlbGVzc19wcm9maWxlX25hbWUsdGVuYW50X2lkKSwNCiAgRk9SRUlHTiBLRVkgKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHByb2ZpbGVzKHByb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpLA0KICBwcmlvcml0eSBpbnRlZ2VyLA0KICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwNCiAgdGVuYW50X2lkIHZhcmNoYXIoMzYpIE5PVCBOVUxMLA0KICBQUklNQVJZIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLCBwcm9maWxlX25hbWUsIHByaW9yaXR5LCB0ZW5hbnRfaWQpDQopOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZG9tYWlucygNCiAgbmFtZSBjaXRleHQgTk9UIE5VTEwsDQogIGRvbWFpbl9zdWZmaXggY2l0ZXh0IE5PVCBOVUxMLA0KICBwcm92aXNpb25pbmdfY2VydCB0ZXh0LA0KICBwcm92aXNpb25pbmdfY2VydF9zdG9yYWdlX2Zvcm1hdCB2YXJjaGFyKDQwKSwNCiAgcHJvdmlzaW9uaW5nX2NlcnRfa2V5IHRleHQsDQogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLA0KICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLA0KICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsDQogIENPTlNUUkFJTlQgZG9tYWluc3VmZml4IFVOSVFVRShkb21haW5fc3VmZml4LHRlbmFudF9pZCksDQogIFBSSU1BUlkgS0VZIChuYW1lLCB0ZW5hbnRfaWQpDQopOw0KQ1JFQVRFIFVOSVFVRSBJTkRFWCBsb3dlcl9uYW1lX3N1ZmZpeF9pZHggT04gZG9tYWlucyAoKGxvd2VyKG5hbWUpKSwgKGxvd2VyKGRvbWFpbl9zdWZmaXgpKSk7DQoNCkNSRUFURSBEQVRBQkFTRSBtcHNkYjsNCg0KXGNvbm5lY3QgbXBzZGINCg0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZGV2aWNlcygNCiAgICAgIGd1aWQgdXVpZCBOT1QgTlVMTCwNCiAgICAgIHRhZ3MgdGV4dFtdLA0KICAgICAgaG9zdG5hbWUgdmFyY2hhcigyNTYpLA0KICAgICAgbXBzaW5zdGFuY2UgdGV4dCwgDQogICAgICBjb25uZWN0aW9uc3RhdHVzIGJvb2xlYW4sDQogICAgICBtcHN1c2VybmFtZSB0ZXh0LA0KICAgICAgdGVuYW50aWQgdmFyY2hhcigzNiksDQogICAgICBmcmllbmRseW5hbWUgdmFyY2hhcigyNTYpLA0KICAgICAgZG5zc3VmZml4IHZhcmNoYXIoMjU2KSwNCiAgICAgIENPTlNUUkFJTlQgZGV2aWNlX2d1aWQgVU5JUVVFKGd1aWQpLA0KICAgICAgUFJJTUFSWSBLRVkgKGd1aWQsdGVuYW50aWQpDQogICAgKTsg"
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsNCiAgICBsaXN0ZW4gODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgbGlzdGVuIFs6Ol06ODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgc2VydmVyX25hbWUgXzsNCiANCg0KICAgIGxvY2F0aW9uIC8gew0KICAgICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOw0KICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07DQogICAgfQ0KDQogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsNCg0KICAgICMgcmVkaXJlY3Qgc2VydmVyIGVycm9yIHBhZ2VzIHRvIHRoZSBzdGF0aWMgcGFnZSAvNTB4Lmh0bWwNCiAgICAjDQogICAgZXJyb3JfcGFnZSAgIDUwMCA1MDIgNTAzIDUwNCAgLzUweC5odG1sOw0KICAgIGxvY2F0aW9uID0gLzUweC5odG1sIHsNCiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsNCiAgICB9DQp9DQoNCg=="
            }
          },
          {
            "name": "kong-config",
            "secret": {
              "kong.yaml": "IyBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTgtMjAxOQ0KIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMA0KDQpfZm9ybWF0X3ZlcnNpb246ICIyLjEiDQpfdHJhbnNmb3JtOiB0cnVlDQoNCnNlcnZpY2VzOg0KLSBuYW1lOiBtcHMtcmVzdA0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogMzAwMA0KICB0YWdzOg0KICAtIG1wcw0KICByb3V0ZXM6DQogIC0gbmFtZTogbXBzLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21wcw0KDQotIG5hbWU6IG1wcy1yZXN0LXYyDQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiAzMDAwDQogIHBhdGg6IC9hcGkvdjEvYXV0aG9yaXplDQogIHRhZ3M6DQogIC0gbXBzDQogIHJvdXRlczoNCiAgLSBuYW1lOiBtcHMtbG9naW4tcm91dGUNCiAgICBzdHJpcF9wYXRoOiB0cnVlDQogICAgcGF0aHM6DQogICAgLSAvbXBzL2xvZ2luL2FwaS92MS9hdXRob3JpemUNCg0KLSBuYW1lOiBtcHMtcmVkaXJlY3Rpb24NCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDMwMDANCiAgcGF0aDogL3JlbGF5DQogIHRhZ3M6DQogIC0gbXBzDQogIHJvdXRlczoNCiAgLSBuYW1lOiBtcHMtcmVkaXJlY3Rpb24tcm91dGUNCiAgICBzdHJpcF9wYXRoOiB0cnVlDQogICAgcGF0aHM6DQogICAgLSAvbXBzL3dzL3JlbGF5DQoNCi0gbmFtZTogcnBzLXJlc3QNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDgwODEgIA0KICB0YWdzOg0KICAtIHJwcw0KICByb3V0ZXM6DQogIC0gbmFtZTogcnBzLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL3Jwcw0KDQotIG5hbWU6IHJwcy13cw0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogODA4MA0KICB0YWdzOg0KICAtIHJwcw0KICByb3V0ZXM6DQogIC0gbmFtZTogcnBzLWFjdGl2YXRlLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL2FjdGl2YXRlDQoNCi0gbmFtZTogdmF1bHQtYXBpDQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiA4MjAwIA0KICB0YWdzOg0KICAtIHZhdWx0DQogIHJvdXRlczoNCiAgLSBuYW1lOiB2YXVsdC1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC92YXVsdA0KDQotIG5hbWU6IG1vc3F1aXR0by13cw0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogOTAwMQ0KICB0YWdzOg0KICAtIG1vc3F1aXR0bw0KICByb3V0ZXM6DQogIC0gbmFtZTogbW9zcXVpdHRvLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21vc3F1aXR0bw0KDQotIG5hbWU6IHdlYg0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogODANCiAgdGFnczoNCiAgLSB3ZWINCiAgcm91dGVzOg0KICAtIG5hbWU6IHdlYi1yb3V0ZQ0KICAgIHBhdGhzOg0KICAgIC0gLw0KDQpwbHVnaW5zOg0KLSBuYW1lOiBjb3JzIA0KLSBuYW1lOiBqd3QNCiAgcm91dGU6IHJwcy1yb3V0ZQ0KICBjb25maWc6DQogICAgY2xhaW1zX3RvX3ZlcmlmeToNCiAgICAtIGV4cA0KLSBuYW1lOiBqd3QNCiAgcm91dGU6IG1wcy1yb3V0ZQ0KICBjb25maWc6DQogICAgY2xhaW1zX3RvX3ZlcmlmeToNCiAgICAtIGV4cA0KDQpjb25zdW1lcnM6DQogIC0gdXNlcm5hbWU6IGFkbWluDQpqd3Rfc2VjcmV0czoNCiAgLSBjb25zdW1lcjogYWRtaW4NCiAgICBrZXk6IDlFbVJKVGJJaUliNGJJZVNzbWdjV0lqclI2SHlFVHFjICNzYW1wbGUga2V5DQogICAgc2VjcmV0OiAic3VwZXJzZWNyZXQiDQo="
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}