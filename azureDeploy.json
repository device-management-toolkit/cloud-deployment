{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "defaultValue": "myroot",
      "type": "securestring"
    },
    "rpsImageName": {
      "defaultValue": "rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "authEnabled": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "defaultValue": "standalone",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "defaultValue": "G@ppm0ym",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsUsername": {
      "defaultValue": "standalone",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsPassword": {
      "defaultValue": "G@ppm0ym",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsSessionEncryptionKey": {
      "defaultValue": "<YourStrongSessionEncryptionKey123!>",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsXAPIKey": {
      "defaultValue": "APIKEYFORMPS123!",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "rpsXAPIKey": {
      "defaultValue": "APIKEYFORRPS123!",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_WEB_TLS_CERT",
                  "value": "../private/mpsserver-cert-public.crt"
                },
                {
                  "name": "RPS_WEB_TLS_CERT_KEY",
                  "value": "../private/mpsserver-cert-private.key"
                },
                {
                  "name": "RPS_ROOT_CA_CERT",
                  "value": "../private/root-cert-public.crt"
                },
                {
                  "name": "RPS_CORS_ORIGIN",
                  "value": "*"
                },
                {
                  "name": "RPS_CORS_HEADERS",
                  "value": "*"
                },
                {
                  "name": "RPS_XAPIKEY",
                  "value": "[parameters('rpsXAPIKey')]"
                },
                {
                  "name": "RPS_MPS_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "RPS_MPS_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                }
              ],
              "command": [
                "/bin/bash",
                "-c",
                "while ! nc -z localhost 3000;\ndo\necho waiting for mps;\nsleep 5;\ndone;\necho MPS Running!;\nnode ./dist/Index.js;"
              ],
              "volumeMounts": [
                {
                  "name": "private",
                  "mountPath": "/rcs-microservice/private"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_CORS_ORIGIN",
                  "value": "*"
                },
                {
                  "name": "MPS_CORS_HEADERS",
                  "value": "*"
                },
                {
                  "name": "MPS_AUTH_ENABLED",
                  "value": "[parameters('authEnabled')]"
                },
                {
                  "name": "MPS_USE_ALLOWLIST",
                  "value": "[parameters('useAllowlist')]"
                },
                {
                  "name": "MPS_XAPIKEY",
                  "value": "[parameters('mpsXAPIKey')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_USER",
                  "value": "[parameters('mpsUsername')]"
                },
                {
                  "name": "MPS_PASSWORD",
                  "value": "[parameters('mpsPassword')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ],
              "volumeMounts": [
                {
                  "name": "private",
                  "mountPath": "/mps-microservice/private"
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 443
                }
              ],
              "environmentVariables": [
                {
                  "name": "REACT_APP_MPS_SERVER",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io')]"
                },
                {
                  "name": "REACT_APP_RPS_SERVER",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io')]"
                },
                {
                  "name": "REACT_APP_MPSXAPIKEY",
                  "value": "[parameters('mpsXAPIKey')]"
                },
                {
                  "name": "REACT_APP_RPSXAPIKEY",
                  "value": "[parameters('rpsXAPIKey')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "private",
                  "mountPath": "/etc/nginx/certs"
                },
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "vault:latest",
              "ports": [
                {
                  "port": 8200
                }
              ],
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "rpsdb",
            "properties": {
              "image": "postgres:latest",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "postgresdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "ip": "168.61.3.88",
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 8080
            },
            {
              "protocol": "tcp",
              "port": 8200
            },
            {
              "protocol": "tcp",
              "port": 8081
            },
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 3000
            },
            {
              "protocol": "tcp",
              "port": 443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMjANCiogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjANCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGNpcmFjb25maWdzKA0KICAgICAgY2lyYV9jb25maWdfbmFtZSB2YXJjaGFyKDQwKSwNCiAgICAgIG1wc19zZXJ2ZXJfYWRkcmVzcyB2YXJjaGFyKDI1NiksDQogICAgICBtcHNfcG9ydCBpbnRlZ2VyLA0KICAgICAgdXNlcl9uYW1lIHZhcmNoYXIoNDApLA0KICAgICAgcGFzc3dvcmQgdmFyY2hhcig2MyksDQogICAgICBjb21tb25fbmFtZSB2YXJjaGFyKDI1NiksDQogICAgICBzZXJ2ZXJfYWRkcmVzc19mb3JtYXQgaW50ZWdlciwgDQogICAgICBhdXRoX21ldGhvZCBpbnRlZ2VyLCANCiAgICAgIG1wc19yb290X2NlcnRpZmljYXRlIHRleHQsIA0KICAgICAgcHJveHlkZXRhaWxzIHRleHQsDQogICAgICBDT05TVFJBSU5UIGNvbmZpZ25hbWUgVU5JUVVFKGNpcmFfY29uZmlnX25hbWUpDQogICAgKTsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIG5ldHdvcmtjb25maWdzKA0KICAgICAgbmV0d29ya19wcm9maWxlX25hbWUgdmFyY2hhcig0MCksDQogICAgICBkaGNwX2VuYWJsZWQgQk9PTEVBTiwNCiAgICAgIHN0YXRpY19pcF9zaGFyZWQgQk9PTEVBTiwNCiAgICAgIGlwX3N5bmNfZW5hYmxlZCBCT09MRUFOLA0KICAgICAgQ09OU1RSQUlOVCBuZXR3b3JrcHJvZmlsZW5hbWUgVU5JUVVFKG5ldHdvcmtfcHJvZmlsZV9uYW1lKQ0KICAgICk7DQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBwcm9maWxlcygNCiAgICAgIHByb2ZpbGVfbmFtZSB2YXJjaGFyKDQwKSwNCiAgICAgIGFjdGl2YXRpb24gdmFyY2hhcigyMCksDQogICAgICBhbXRfcGFzc3dvcmQgdmFyY2hhcig0MCksDQogICAgICBjb25maWd1cmF0aW9uX3NjcmlwdCB0ZXh0LA0KICAgICAgY2lyYV9jb25maWdfbmFtZSB2YXJjaGFyKDQwKSBSRUZFUkVOQ0VTIGNpcmFjb25maWdzKGNpcmFfY29uZmlnX25hbWUpLA0KICAgICAgZ2VuZXJhdGVfcmFuZG9tX3Bhc3N3b3JkIEJPT0xFQU4sDQogICAgICByYW5kb21fcGFzc3dvcmRfY2hhcmFjdGVycyB2YXJjaGFyKDEwMCksDQogICAgICByYW5kb21fcGFzc3dvcmRfbGVuZ3RoIGludGVnZXIsDQogICAgICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgICAgIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksDQogICAgICBuZXR3b3JrX3Byb2ZpbGVfbmFtZSB2YXJjaGFyKDQwKSBSRUZFUkVOQ0VTIG5ldHdvcmtjb25maWdzKG5ldHdvcmtfcHJvZmlsZV9uYW1lKSwNCiAgICAgIG1lYnhfcGFzc3dvcmQgdmFyY2hhcig0MCksDQogICAgICBnZW5lcmF0ZV9yYW5kb21fbWVieF9wYXNzd29yZCBCT09MRUFOLA0KICAgICAgcmFuZG9tX21lYnhfcGFzc3dvcmRfbGVuZ3RoIGludGVnZXIsDQogICAgICBDT05TVFJBSU5UIG5hbWUgVU5JUVVFKHByb2ZpbGVfbmFtZSkNCiAgICApOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZG9tYWlucygNCiAgICAgIG5hbWUgdmFyY2hhcig0MCksDQogICAgICBkb21haW5fc3VmZml4IHZhcmNoYXIoNDApLA0KICAgICAgcHJvdmlzaW9uaW5nX2NlcnQgdGV4dCwNCiAgICAgIHByb3Zpc2lvbmluZ19jZXJ0X3N0b3JhZ2VfZm9ybWF0IHZhcmNoYXIoNDApLA0KICAgICAgcHJvdmlzaW9uaW5nX2NlcnRfa2V5IHRleHQsDQogICAgICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgICAgIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksDQogICAgICBDT05TVFJBSU5UIGRvbWFpbm5hbWUgVU5JUVVFKG5hbWUpLA0KICAgICAgQ09OU1RSQUlOVCBkb21haW5zdWZmaXggVU5JUVVFKGRvbWFpbl9zdWZmaXgpDQogICAgKTsNCg0KSU5TRVJUIElOVE8gcHVibGljLm5ldHdvcmtjb25maWdzKA0KICBuZXR3b3JrX3Byb2ZpbGVfbmFtZSwgZGhjcF9lbmFibGVkLCBzdGF0aWNfaXBfc2hhcmVkLCBpcF9zeW5jX2VuYWJsZWQpIA0KICB2YWx1ZXMoJ2RoY3BfZGlzYWJsZWQnLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7DQpJTlNFUlQgSU5UTyBwdWJsaWMubmV0d29ya2NvbmZpZ3MoDQogIG5ldHdvcmtfcHJvZmlsZV9uYW1lLCBkaGNwX2VuYWJsZWQsIHN0YXRpY19pcF9zaGFyZWQsIGlwX3N5bmNfZW5hYmxlZCkgIA0KICB2YWx1ZXMoJ2RoY3BfZW5hYmxlZCcsIHRydWUsIGZhbHNlLCB0cnVlKTs="
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": ""
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}